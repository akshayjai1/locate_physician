{"ast":null,"code":"import _classCallCheck from \"/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport Select from 'react-select';\nimport axios from 'axios';\nvar options = [];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.handleChange = function (selectedOption) {\n      _this.getCoordinate(selectedOption.address);\n\n      _this.setState({\n        selectedOption: selectedOption\n      }); //console.log(`Option selected:`, selectedOption);\n\n    };\n\n    _this.state = {\n      selectedOption: null,\n      isLoaded: false,\n      autocompleteSuggestion: [],\n      lat: 48.407326,\n      long: -123.329773,\n      idx: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getCoordinate\",\n    value: function getCoordinate(address) {\n      var _this2 = this;\n\n      var url = 'https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyDMQNXNqvLcdx4rEhOsSX5YCRyzCUAuDaI&address=' + address;\n      axios.get(url).then(function (res) {\n        if (res.data.results[0].geometry.location.lat != undefined) {\n          console.log(address);\n          console.log(res.data.results[0].geometry.location.lat);\n          console.log(res.data.results[0].geometry.location.lng);\n\n          _this2.setState({\n            lat: res.data.results[0].geometry.location.lat,\n            long: res.data.results[0].geometry.location.lng\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch('/api/').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var physician_names = [];\n        json.map(function (item, i) {\n          if (item.Physician_First_Name != \"Physician_First_Name\") {\n            var full_name = item.Physician_First_Name + \" \" + item.Physician_Middle_Name + \" \" + item.Physician_Last_Name;\n            var address = item.Recipient_Primary_Business_Street_Address_Line1 + \",\" + item.Recipient_City + \",\" + item.Recipient_State + \",\" + item.Recipient_Zip_Code + \",\" + item.Recipient_Country;\n            address = address.replace(/\\s/g, '');\n            var obj = {\n              'value': full_name,\n              'label': full_name,\n              'address': address,\n              'id': i\n            };\n            physician_names.push(obj);\n          }\n        });\n        options = physician_names;\n\n        _this3.setState({\n          isLoaded: true,\n          response: json,\n          autocompleteSuggestion: physician_names\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedOption = _this$state.selectedOption,\n          isLoaded = _this$state.isLoaded,\n          response = _this$state.response,\n          lat = _this$state.lat,\n          long = _this$state.long;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"App-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })));\n      } else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        center: {\n          lat: lat,\n          lng: long\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Current location',\n        position: {\n          lat: lat,\n          lng: long\n        },\n        defaultAnimation: this.props.google.maps.Animation.DROP,\n        icon: {\n          url: \"https://cdn.dribbble.com/users/1401331/screenshots/4113224/5.png\",\n          anchor: new this.props.google.maps.Point(32, 32),\n          scaledSize: new this.props.google.maps.Size(64, 64)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Locate physician\"), React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        name: \"submit\",\n        type: \"submit\",\n        id: \"contact-submit\",\n        onClick: this.locatePhy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Find location\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDMQNXNqvLcdx4rEhOsSX5YCRyzCUAuDaI\"\n})(App);","map":{"version":3,"sources":["/Users/dawithunegnaw/Desktop/tst_grd/locate_phy/locate_phyisician_three/client/src/App.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","Select","axios","options","App","props","handleChange","selectedOption","getCoordinate","address","setState","state","isLoaded","autocompleteSuggestion","lat","long","idx","url","get","then","res","data","results","geometry","location","undefined","console","log","lng","fetch","json","physician_names","map","item","i","Physician_First_Name","full_name","Physician_Middle_Name","Physician_Last_Name","Recipient_Primary_Business_Street_Address_Line1","Recipient_City","Recipient_State","Recipient_Zip_Code","Recipient_Country","replace","obj","push","response","logo","google","onMarkerClick","maps","Animation","DROP","anchor","Point","scaledSize","Size","locatePhy","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,MAAzB,EAAiCC,gBAAjC,QAAwD,mBAAxD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,IAAIC,OAAO,GAAG,EAAd;;IAEMC,G;;;;;AAGL,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACf;;AADe,UA0EjBC,YA1EiB,GA0EF,UAACC,cAAD,EAAoB;AACnC,YAAKC,aAAL,CAAmBD,cAAc,CAACE,OAAlC;;AACA,YAAKC,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAdA;AAAF,OAAd,EAFmC,CAGjC;;AACD,KA9EgB;;AAEf,UAAKI,KAAL,GAAa;AACbJ,MAAAA,cAAc,EAAE,IADH;AAEbK,MAAAA,QAAQ,EAAE,KAFG;AAGbC,MAAAA,sBAAsB,EAAE,EAHX;AAIbC,MAAAA,GAAG,EAAE,SAJQ;AAKbC,MAAAA,IAAI,EAAE,CAAC,UALM;AAMbC,MAAAA,GAAG,EAAE;AANQ,KAAb;AAFe;AAWjB;;;;kCAIYP,O,EAAQ;AAAA;;AAEpB,UAAIQ,GAAG,GAAG,2GAA2GR,OAArH;AAIGP,MAAAA,KAAK,CAACgB,GAAN,CAAUD,GAAV,EACEE,IADF,CACO,UAAAC,GAAG,EAAI;AAGX,YAAGA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCV,GAAtC,IAA6CW,SAAhD,EAA0D;AAExDC,UAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACAiB,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCV,GAAlD;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCI,GAAlD;;AACA,UAAA,MAAI,CAAClB,QAAL,CAAc;AACbI,YAAAA,GAAG,EAAEM,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCV,GAD9B;AAEdC,YAAAA,IAAI,EAAEK,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCI;AAF9B,WAAd;AAMH;AAEA,OAjBF;AAoBJ;;;wCAEkB;AAAA;;AAEfC,MAAAA,KAAK,CAAC,OAAD,CAAL,CACGV,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACU,IAAJ,EAAJ;AAAA,OADX,EAEGX,IAFH,CAEQ,UAAAW,IAAI,EAAI;AACZ,YAAIC,eAAe,GAAG,EAAtB;AAEAD,QAAAA,IAAI,CAACE,GAAL,CAAS,UAASC,IAAT,EAAeC,CAAf,EAAiB;AACxB,cAAGD,IAAI,CAACE,oBAAL,IAA6B,sBAAhC,EAAuD;AACvD,gBAAIC,SAAS,GAAGH,IAAI,CAACE,oBAAL,GAA4B,GAA5B,GAAkCF,IAAI,CAACI,qBAAvC,GAA+D,GAA/D,GAAqEJ,IAAI,CAACK,mBAA1F;AACA,gBAAI7B,OAAO,GAAGwB,IAAI,CAACM,+CAAL,GAAuD,GAAvD,GAA4DN,IAAI,CAACO,cAAjE,GAAiF,GAAjF,GAAuFP,IAAI,CAACQ,eAA5F,GAA8G,GAA9G,GAAoHR,IAAI,CAACS,kBAAzH,GAA8I,GAA9I,GAAoJT,IAAI,CAACU,iBAAvK;AAEAlC,YAAAA,OAAO,GAAIA,OAAO,CAACmC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAX;AAEC,gBAAIC,GAAG,GAAG;AAAC,uBAAUT,SAAX;AAAsB,uBAAUA,SAAhC;AAA2C,yBAAW3B,OAAtD;AAA+D,oBAAMyB;AAArE,aAAV;AACCH,YAAAA,eAAe,CAACe,IAAhB,CAAqBD,GAArB;AACD;AACF,SAVD;AAWA1C,QAAAA,OAAO,GAAG4B,eAAV;;AAGA,QAAA,MAAI,CAACrB,QAAL,CAAc;AACZE,UAAAA,QAAQ,EAAE,IADE;AAEZmC,UAAAA,QAAQ,EAAEjB,IAFE;AAGZjB,UAAAA,sBAAsB,EAAEkB;AAHZ,SAAd;AAKD,OAxBH;AA0BD;;;6BAQQ;AAAA,wBACmD,KAAKpB,KADxD;AAAA,UACCJ,cADD,eACCA,cADD;AAAA,UACiBK,QADjB,eACiBA,QADjB;AAAA,UAC2BmC,QAD3B,eAC2BA,QAD3B;AAAA,UACqCjC,GADrC,eACqCA,GADrC;AAAA,UAC0CC,IAD1C,eAC0CA,IAD1C;;AAIV,UAAI,CAACH,QAAL,EAAc;AACT,eACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEoC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADE,CADJ;AAUD,OAXJ,MAYG,OAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAK3C,KAAL,CAAW4C,MAAxB;AAAgC,QAAA,IAAI,EAAE,EAAtC;AACE,QAAA,MAAM,EAAE;AACNnC,UAAAA,GAAG,EAAEA,GADC;AAENc,UAAAA,GAAG,EAAEb;AAFC,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKmC,aAAtB;AACQ,QAAA,IAAI,EAAE,kBADd;AAEQ,QAAA,QAAQ,EAAE;AAACpC,UAAAA,GAAG,EAAEA,GAAN;AAAWc,UAAAA,GAAG,EAAEb;AAAhB,SAFlB;AAIQ,QAAA,gBAAgB,EAAE,KAAKV,KAAL,CAAW4C,MAAX,CAAkBE,IAAlB,CAAuBC,SAAvB,CAAiCC,IAJ3D;AAKQ,QAAA,IAAI,EAAE;AAChBpC,UAAAA,GAAG,EAAE,kEADW;AAEhBqC,UAAAA,MAAM,EAAE,IAAI,KAAKjD,KAAL,CAAW4C,MAAX,CAAkBE,IAAlB,CAAuBI,KAA3B,CAAiC,EAAjC,EAAoC,EAApC,CAFQ;AAGhBC,UAAAA,UAAU,EAAE,IAAI,KAAKnD,KAAL,CAAW4C,MAAX,CAAkBE,IAAlB,CAAuBM,IAA3B,CAAgC,EAAhC,EAAmC,EAAnC;AAHI,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CAHL,EA4BO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGK,oBAAC,MAAD;AACC,QAAA,KAAK,EAAElD,cADR;AAEC,QAAA,QAAQ,EAAE,KAAKD,YAFhB;AAGC,QAAA,OAAO,EAAEH,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHL,EAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,QAA3B;AAAoC,QAAA,EAAE,EAAC,gBAAvC;AAAwD,QAAA,OAAO,EAAE,KAAKuD,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAZJ,CADQ,CA5BP,CAFC;AAsDF;;;;EAxJgB9D,S;;AAgKlB,eAAeI,gBAAgB,CAAC;AAC9B2D,EAAAA,MAAM,EAAG;AADqB,CAAD,CAAhB,CAEZvD,GAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport axios from 'axios';\n\n\n\nlet options = [];\n\nclass App extends Component {\n \n \n constructor(props){\n    super();\n    this.state = {\n    selectedOption: null,\n    isLoaded: false,\n    autocompleteSuggestion: [],\n    lat: 48.407326,\n    long: -123.329773,\n    idx: 0\n  }\n\n }\n\n\n\ngetCoordinate(address){\n\n  let url = 'https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyDMQNXNqvLcdx4rEhOsSX5YCRyzCUAuDaI&address=' + address\n  \n  \n  \n     axios.get(url)\n      .then(res => {\n     \n\n        if(res.data.results[0].geometry.location.lat != undefined){\n    \n          console.log(address)\n          console.log(res.data.results[0].geometry.location.lat)   \n          console.log(res.data.results[0].geometry.location.lng)   \n          this.setState({\n           lat: res.data.results[0].geometry.location.lat,\n          long: res.data.results[0].geometry.location.lng,\n        })\n\n\n      }\n      \n      })\n\n\n}\n\ncomponentDidMount(){\n\n    fetch('/api/')\n      .then(res => res.json())\n      .then(json => {\n        var physician_names = []\n\n        json.map(function(item, i){\n          if(item.Physician_First_Name != \"Physician_First_Name\"){\n          let full_name = item.Physician_First_Name + \" \" + item.Physician_Middle_Name + \" \" + item.Physician_Last_Name\n          let address = item.Recipient_Primary_Business_Street_Address_Line1 + \",\"+ item.Recipient_City+ \",\" + item.Recipient_State + \",\" + item.Recipient_Zip_Code + \",\" + item.Recipient_Country\n        \n          address =  address.replace(/\\s/g, '');\n         \n           let obj = {'value' : full_name, 'label' : full_name, 'address': address ,'id': i}\n            physician_names.push(obj)\n          }\n        })\n        options = physician_names\n      \n\n        this.setState({\n          isLoaded: true,\n          response: json,\n          autocompleteSuggestion: physician_names,\n        })\n      })\n\n  }\n\n\n  handleChange = (selectedOption) => {\n  this.getCoordinate(selectedOption.address)\n  this.setState({ selectedOption });\n    //console.log(`Option selected:`, selectedOption);\n  }\n  render() {\n    const { selectedOption, isLoaded, response, lat, long } = this.state;\n\n\n if (!isLoaded){\n      return (\n          <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          \n        </header>\n\n          </div>\n\n        )\n    } else\n    return (\n\n   <div>\n    \n     \n        <Map google={this.props.google} zoom={14}\n          center={{\n            lat: lat,\n            lng: long\n          }}\n\n        >\n \n        <Marker onClick={this.onMarkerClick}\n                name={'Current location'}\n                position={{lat: lat, lng: long}} \n\n                defaultAnimation={this.props.google.maps.Animation.DROP}\n                icon={{\n      url: \"https://cdn.dribbble.com/users/1401331/screenshots/4113224/5.png\",\n      anchor: new this.props.google.maps.Point(32,32),\n      scaledSize: new this.props.google.maps.Size(64,64)\n    }}\n\n                />\n \n\n\n      </Map>\n      \n          <div className=\"container\">  \n  <div id=\"contact\" >\n    <h3>Locate physician</h3>\n\n       <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n\n      />\n\n\n   \n      <button name=\"submit\" type=\"submit\" id=\"contact-submit\" onClick={this.locatePhy}>Find location</button>\n   \n    </div>\n</div>\n\n        </div>\n\n\n    )\n\n\n }\n\n\n}\n\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: (\"AIzaSyDMQNXNqvLcdx4rEhOsSX5YCRyzCUAuDaI\")\n})(App)\n"]},"metadata":{},"sourceType":"module"}